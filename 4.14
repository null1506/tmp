//4.14
#include<stdio.h>
#include <stdlib.h>
#include<math.h>
// Hoàng Hải Yến
typedef struct Element {
    int coef; // Hệ số khác 0
    int exp;  // Số mũ
} Element;

typedef struct _Node {
    Element value;
    struct _Node *next;
} Node;

// Khởi tạo danh sách
void init(Node **head) {
    *head = NULL;
}

// Tạo node
Node *createNode(Element el) {
    Node *p = (Node *)malloc(sizeof(Node));
    if (p == NULL) {
        printf("Error in memory allocation\n");
        exit(1);
    }
    p->value = el;
    p->next = NULL;
    return p;
}

// Chèn node
void insertNode(Node **head, Element el) {
    Node *p = createNode(el);
    if (*head == NULL) { // Danh sách rỗng
        *head = p;
        return;
    }
    Node *r = *head;
    Node *prev = NULL;

    while (r != NULL && r->value.exp < el.exp) { // Thay đổi điều kiện để chèn theo thứ tự giảm dần
        prev = r;
        r = r->next;
    }

    if (r != NULL && r->value.exp == el.exp) { // Phần tử cần chèn đã có, chỉ cập nhật giá trị hệ số
        r->value = el;
        free(p); // Giải phóng bộ nhớ cho p vì nó không cần thiết nữa
    } else { // Chèn vào danh sách
        if (prev == NULL) { // Thêm phần tử vào đầu
            p->next = *head;
            *head = p;
        } else { // Thêm phần tử vào giữa hoặc cuối
            prev->next = p;
            p->next = r;
        }
    }
}

// Hàm xuất danh sách
void export(Node *head) {
    Node *p = head;
    while (p != NULL) {
        printf("%d*x^%d", p->value.coef, p->value.exp);
        if (p->next != NULL)
            printf(" + ");
        p = p->next;
    }
    printf("\n");
}

//hàm tính giá trị đa thức
int f(Node *head, int x){
    Node *p = head;
    int kq = 0;
    while (p != NULL){
        kq += p->value.coef * pow(x,p->value.exp);
        p = p->next;
    }
    return kq;
}
int main() {
    Node *head = NULL;
    init(&head); // Chuyển con trỏ con trỏ vào hàm init
    printf("Nhap so phan tu da thuc");
    int n;
    scanf("%d",&n);
    int i = 0;
    while (i < n){
    Element e;
    printf("Nhap he so: ");
    scanf("%d",&e.coef);
    printf("Nhap so mu: ");
    scanf("%d",&e.exp);
     // Chuyển con trỏ con trỏ vào hàm insertNode
    insertNode(&head, e);
    i++;
    }
    export(head);
    int k = f(head, 2);
    printf("Ket qua da thuc  = %d", k);
    return 0;
}
